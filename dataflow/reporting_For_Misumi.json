{
	"name": "reporting_For_Misumi",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ProductsCleaned",
						"type": "DatasetReference"
					},
					"name": "products"
				},
				{
					"dataset": {
						"referenceName": "categoriesCleaned",
						"type": "DatasetReference"
					},
					"name": "categories"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "joinProductsAndCategories"
				},
				{
					"name": "topBrand"
				},
				{
					"name": "sort1"
				},
				{
					"name": "topCategory"
				},
				{
					"name": "sort2"
				},
				{
					"name": "avgOfShippingDaysForBrand"
				},
				{
					"name": "castingDays"
				},
				{
					"name": "castingDayss"
				},
				{
					"name": "avgOfShippingDaysForCategories"
				}
			],
			"scriptLines": [
				"source(output(",
				"          department_code as string,",
				"          category_code as string,",
				"          category_name as string,",
				"          search_category_code as string,",
				"          series_code as string,",
				"          series_name as string,",
				"          brand_code as string,",
				"          brand_url_code as string,",
				"          brand_name as string,",
				"          min_standard_days_to_ship as string,",
				"          max_standard_days_to_ship as string,",
				"          direct_cart_type as string,",
				"          price_check_less_flag as string,",
				"          min_standard_unit_price as double,",
				"          max_standard_unit_price as double,",
				"          min_price_per_piece as double,",
				"          max_price_per_piece as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> products",
				"source(output(",
				"          product_category as string,",
				"          category as string,",
				"          subcategory as string,",
				"          category_code as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> categories",
				"products, categories join(products@category_code == categories@category_code,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinProductsAndCategories",
				"joinProductsAndCategories aggregate(groupBy(brand_code),",
				"     series_code = count(series_code)) ~> topBrand",
				"topBrand sort(desc(series_code, true)) ~> sort1",
				"joinProductsAndCategories aggregate(groupBy(category_name),",
				"     brand_code = count(category_name)) ~> topCategory",
				"topCategory sort(desc(category_name, true)) ~> sort2",
				"castingDays aggregate(groupBy(brand_code),",
				"     max_standard_days_to_ship = avg(max_standard_days_to_ship),",
				"          min_standard_days_to_ship = avg(min_standard_days_to_ship)) ~> avgOfShippingDaysForBrand",
				"joinProductsAndCategories cast(output(",
				"          min_standard_days_to_ship as integer,",
				"          max_standard_days_to_ship as integer",
				"     ),",
				"     errors: true) ~> castingDays",
				"joinProductsAndCategories cast(output(",
				"          min_standard_days_to_ship as integer,",
				"          max_standard_days_to_ship as integer",
				"     ),",
				"     errors: true) ~> castingDayss",
				"castingDayss aggregate(groupBy(category_name),",
				"     min_standard_days_to_ship = avg(min_standard_days_to_ship),",
				"          max_standard_days_to_ship = avg(max_standard_days_to_ship)) ~> avgOfShippingDaysForCategories"
			]
		}
	}
}